package com.vulnerability;


import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.http.HttpStatus;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.MvcResult;
import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

@RunWith(SpringRunner.class)
@SpringBootTest
@AutoConfigureMockMvc
public class MainControllerTest {

  @Autowired
  private MockMvc mvc;

  @Test
  public void testGetCurrentDateTimeValid() throws Exception {

    MvcResult result = mvc.perform(MockMvcRequestBuilders.get("/currentDateTime")
        .header("Time-Zone", "CET"))
        .andExpect(MockMvcResultMatchers.status().isOk())
        .andReturn();

    String resultContent = result.getResponse().getContentAsString();
    Assert.assertNotNull(resultContent);
    Assert.assertTrue(HttpStatus.OK.equals(HttpStatus.valueOf(result.getResponse().getStatus())));
  }

  @Test
  public void testGetCurrentDateTimeBadRequest() throws Exception {

    MvcResult result = mvc.perform(MockMvcRequestBuilders.get("/currentDateTime")
        .header("Time-Zone", "abcd"))
        .andExpect(MockMvcResultMatchers.status().isBadRequest())
        .andReturn();

    String resultContent = result.getResponse().getContentAsString();
    Assert.assertNotNull(resultContent);
    Assert.assertTrue(HttpStatus.BAD_REQUEST.equals(HttpStatus.valueOf(result.getResponse().getStatus())));
  }

}
